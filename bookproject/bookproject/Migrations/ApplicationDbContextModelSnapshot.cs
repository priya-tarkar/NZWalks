// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using bookproject.Data;

#nullable disable

namespace bookproject.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("bookproject.Model.Book", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int?>("Id"));

                    b.Property<int?>("BookCoverId")
                        .HasColumnType("integer");

                    b.Property<string>("BookUrl")
                        .HasColumnType("text");

                    b.Property<int?>("BookWritter1Id")
                        .HasColumnType("integer");

                    b.Property<int?>("BookWritterId1")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<int?>("ISBNNumber")
                        .HasColumnType("integer");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .HasColumnType("text");

                    b.Property<bool?>("Treding")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.HasIndex("BookCoverId");

                    b.HasIndex("BookWritter1Id");

                    b.ToTable("Books");
                });

            modelBuilder.Entity("bookproject.Model.BookCover", b =>
                {
                    b.Property<int?>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int?>("id"));

                    b.Property<int?>("BookWritterId")
                        .HasColumnType("integer");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.HasIndex("BookWritterId");

                    b.ToTable("BookCovers");
                });

            modelBuilder.Entity("bookproject.Model.BookWritter", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int?>("Id"));

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("BookWritter");
                });

            modelBuilder.Entity("bookproject.Model.Book", b =>
                {
                    b.HasOne("bookproject.Model.BookCover", "BookCover")
                        .WithMany("Books")
                        .HasForeignKey("BookCoverId");

                    b.HasOne("bookproject.Model.BookWritter", "BookWritter1")
                        .WithMany("Books")
                        .HasForeignKey("BookWritter1Id");

                    b.Navigation("BookCover");

                    b.Navigation("BookWritter1");
                });

            modelBuilder.Entity("bookproject.Model.BookCover", b =>
                {
                    b.HasOne("bookproject.Model.BookWritter", "BookWritter")
                        .WithMany("BookCovers")
                        .HasForeignKey("BookWritterId");

                    b.Navigation("BookWritter");
                });

            modelBuilder.Entity("bookproject.Model.BookCover", b =>
                {
                    b.Navigation("Books");
                });

            modelBuilder.Entity("bookproject.Model.BookWritter", b =>
                {
                    b.Navigation("BookCovers");

                    b.Navigation("Books");
                });
#pragma warning restore 612, 618
        }
    }
}
